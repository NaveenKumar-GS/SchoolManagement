@model Schoolmanagementn.UserRegistration

@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm())
{
    <div id="kt_header" class="header header-fixed">
        <div class="container-fluid d-flex align-items-stretch justify-content-between">
            <div class="header-menu-wrapper header-menu-wrapper-left" id="kt_header_menu_wrapper">
                <div id="kt_header_menu" class="header-menu header-menu-mobile header-menu-layout-default">
                    <span id="CustomerName" style="margin-top:1rem;margin-left:200px;font-size:30px;font-weight:500">Registration</span>
                </div>
            </div>
            <div class="topbar">
                <div class="topbar-item">

                </div>
            </div>
        </div>
    </div>
    <div class="subheader py-2 py-lg-4 subheader-solid" id="kt_subheader">
        <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <div class="d-flex align-items-center flex-wrap mr-2">
                <h5 class="text-dark font-weight-bold mt-2 mb-2 mr-5"> </h5>
                <span style="font-size:20px" class="text-dark font-weight-boldest ">Edit</span>
            </div>
            <div class="d-flex align-items-center">
                <div class="btn-group ml-2">

                    <div class="container-fluid d-flex flex-wrap flex-sm-nowrap">

                        <a href="@Url.Action("Index", "UserRegistrations")" class="btn btn-dark font-weight-bold btn-sm px-3 font-size-base" style="margin-left: 700px">Back</a>
                        <input type="reset" value="Undo Changes" class="btn btn-outline-secondary font-weight-boldest" />
                        <div class="btn-group ml-2">
                            <input type="submit" value="Save" class="btn btn-primary font-weight-bold btn-sm px-3 font-size-base" onclick="return encrypt()" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            <label class="control-label col-md-2">Full Name<span class="text-danger">*</span></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Role<span class="text-danger">*</span></label>
            <div class="col-md-10">
                @Html.DropDownList("Role", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Phone Number<span class="text-danger">*</span></label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Password<span class="text-danger">*</span></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Email Id<span class="text-danger">*</span></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

        </div>
    </div>
}

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
